export gitPromptDirectory=$(dirname $(readlink -f ${0}))
export gitPromptExecutable=${GIT_PROMPT_EXECUTABLE:-"python"}

autoload -U colors
colors

setopt PROMPT_SUBST

autoload -U add-zsh-hook
add-zsh-hook chpwd updateGitVarsOnDirectoryChange
add-zsh-hook preexec updateGitVarsBeforeCommandExecution
add-zsh-hook precmd updateGitVarsBeforePromptDisplay

# Function to update git variables before executing a command
updateGitVarsBeforeCommandExecution() {
    case "$2" in
        git*|hub*|gh*|stg*)
            executedGitCommand=true
        ;;
    esac
}

updateGitVarsBeforePromptDisplay() {
    if [ -n "$executedGitCommand" ] || [ ! -n "$ZSH_THEME_GIT_PROMPT_CACHE" ]; then
        updateCurrentGitVars
        unset executedGitCommand
    fi
}

updateGitVarsOnDirectoryChange() {
    updateCurrentGitVars
}

updateCurrentGitVars() {
    unset currentGitStatus

    if [[ "$gitPromptExecutable" == "python" ]]; then
        local gitstatusScript="$gitPromptDirectory/gitstatus.py"
        currentGitStatus=$(python ${gitstatusScript} 2>/dev/null)
    elif [[ "$gitPromptExecutable" == "haskell" ]]; then
        currentGitStatus=$(git status --porcelain --branch &> /dev/null | $gitPromptDirectory/src/.bin/gitstatus)
    fi
    currentGitStatusArray=("${(@s: :)currentGitStatus}")

    gitBranch=${currentGitStatusArray[1]}
    gitAhead=${currentGitStatusArray[2]}
    gitBehind=${currentGitStatusArray[3]}
    gitStaged=${currentGitStatusArray[4]}
    gitConflicts=${currentGitStatusArray[5]}
    gitChanged=${currentGitStatusArray[6]}
    gitUntracked=${currentGitStatusArray[7]}
}

appendToStatus() {
    if [ -n "$STATUS" ]; then
        STATUS="$STATUS$1 $2%{${reset_color}%}"
    else
        STATUS="$STATUS $1 $2%{${reset_color}%}"
    fi
}

git_super_status() {
    precmd_update_git_vars
    if git rev-parse --git-dir > /dev/null 2>&1; then
        if [ -n "$__CURRENT_GIT_STATUS" ]; then
            STATUS="$ZSH_THEME_GIT_PROMPT_PREFIX$ZSH_THEME_GIT_PROMPT_BRANCH$GIT_BRANCH"
            [ "$GIT_BEHIND" -ne "0" ] && appendToStatus "$ZSH_THEME_GIT_PROMPT_BEHIND" "$GIT_BEHIND"
            [ "$GIT_AHEAD" -ne "0" ] && appendToStatus "$ZSH_THEME_GIT_PROMPT_AHEAD" "$GIT_AHEAD"
            STATUS="${STATUS}$ZSH_THEME_GIT_PROMPT_SEPARATOR"
            [ "$GIT_STAGED" -ne "0" ] && appendToStatus "$ZSH_THEME_GIT_PROMPT_STAGED" "$GIT_STAGED"
            [ "$GIT_CONFLICTS" -ne "0" ] && appendToStatus "$ZSH_THEME_GIT_PROMPT_CONFLICTS" "$GIT_CONFLICTS"
            [ "$GIT_CHANGED" -ne "0" ] && appendToStatus "$ZSH_THEME_GIT_PROMPT_CHANGED" "$GIT_CHANGED"
            [ "$GIT_UNTRACKED" -ne "0" ] && appendToStatus "$ZSH_THEME_GIT_PROMPT_UNTRACKED" "$GIT_UNTRACKED"
            [ "$GIT_CHANGED" -eq "0" ] && [ "$GIT_CONFLICTS" -eq "0" ] && [ "$GIT_STAGED" -eq "0" ] && [ "$GIT_UNTRACKED" -eq "0" ] && appendToStatus "$ZSH_THEME_GIT_PROMPT_CLEAN" ""
            STATUS="$STATUS%{${reset_color}%}$ZSH_THEME_GIT_PROMPT_SUFFIX"
            echo "$STATUS"
        fi
    fi
}

if [ -n "$USE_TRADITIONAL_GIT_PROMPT_THEME" ]; then
		ZSH_THEME_GIT_PROMPT_PREFIX="("
		ZSH_THEME_GIT_PROMPT_SUFFIX=")"
		ZSH_THEME_GIT_PROMPT_SEPARATOR="|"
		ZSH_THEME_GIT_PROMPT_BRANCH="%{$fg_bold[magenta]%}"
		ZSH_THEME_GIT_PROMPT_STAGED="%{$fg[red]%}%{‚óè%G%}"
		ZSH_THEME_GIT_PROMPT_CONFLICTS="%{$fg[red]%}%{‚úñ%G%}"
		ZSH_THEME_GIT_PROMPT_CHANGED="%{$fg[blue]%}%{‚úö%G%}"
		ZSH_THEME_GIT_PROMPT_BEHIND="%{‚Üì%G%}"
		ZSH_THEME_GIT_PROMPT_AHEAD="%{‚Üë%G%}"
		ZSH_THEME_GIT_PROMPT_UNTRACKED="%{‚Ä¶%G%}"
		ZSH_THEME_GIT_PROMPT_CLEAN="%{$fg_bold[green]%}%{‚úî%G%}"
else
		ZSH_THEME_GIT_PROMPT_PREFIX="("
		ZSH_THEME_GIT_PROMPT_SUFFIX=")"
		ZSH_THEME_GIT_PROMPT_SEPARATOR=" | "
		ZSH_THEME_GIT_PROMPT_BRANCH="%{$fg_bold[magenta]%}üåø "
		ZSH_THEME_GIT_PROMPT_STAGED="%{$fg[red]%}üì¶"
		ZSH_THEME_GIT_PROMPT_CONFLICTS="%{$fg[red]%}‚öîÔ∏è"
		ZSH_THEME_GIT_PROMPT_CHANGED="%{$fg[blue]%}üìù"
		ZSH_THEME_GIT_PROMPT_BEHIND="%{$fg[yellow]%}‚¨áÔ∏è"
		ZSH_THEME_GIT_PROMPT_AHEAD="%{$fg[green]%}‚¨ÜÔ∏è"
		ZSH_THEME_GIT_PROMPT_UNTRACKED="%{$fg[cyan]%}üì≠"
		ZSH_THEME_GIT_PROMPT_CLEAN="%{$fg_bold[green]%}‚úÖ"
fi 

